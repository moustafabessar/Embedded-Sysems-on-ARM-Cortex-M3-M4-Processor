/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

change_access_level_unpriv(void)
{

}

int main(void)
{


	change_access_level_unpriv();
	int val = 50;
	__asm volatile("MOV R0,%0": :"r"(val):);

	int control_reg;
	//read CONTROL register to control_reg
	__asm volatile("MRS %0,CONTROL":"=r"(control_reg)::);

	int var1 = 100, var2;
	__asm volatile("MOV %0,%1":"=r"(var2):"r"(var1):);

	//store content of pointer into another variable
	int p1,*p2;
	p2 = (int*)0x20000008;
	__asm volatile("LDR %0,[%1]":"=r"(p1):"r"(p2):);  //p1 = *p2

	for(;;);
}
